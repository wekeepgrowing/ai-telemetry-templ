Docs
Tracing Features
Trace IDs & Distributed Tracing
Trace IDs & Distributed Tracing
Langfuse allows you to bring your own trace IDs (e.g., messageId, traceId, correlationId) for

distributed tracing
and linking traces across services for lookups between services.
By default, Langfuse assigns random IDs (uuid, cuid) to all logged events.

It is recommended to use your own domain specific IDs (e.g., messageId, traceId, correlationId) as it helps with downstream use cases like:

deeplinking to the trace from your own ui or logs
evaluating and adding custom metrics to the trace
fetching the trace from the API
Data Model
Trace IDs in Langfuse:

Must be unique within a project
Are used to identify and group related observations
Can be used for distributed tracing across services
Support upsert operations (creating or updating based on ID)
Usage
import { Langfuse } from "langfuse";
import { v4 as uuidv4 } from "uuid";
 
const langfuse = new Langfuse();
 
// Create trace with custom ID
const traceId = uuidv4();
const trace = langfuse.trace({
  id: traceId,
  name: "chat-app-session",
  userId: "user_123456789",
  metadata: { user: "user@langfuse.com" },
  tags: ["production"],
});
 
// Create observations with custom IDs
const span = trace.span({
  id: "custom-span-id",
  name: "chat-interaction",
});
 
const generation = trace.generation({
  id: "custom-generation-id",
  name: "chat-completion",
});

Best Practices
Consistent ID Format: Use a consistent format for your trace IDs across your application.
Unique IDs: Ensure trace IDs are unique within your project to avoid conflicts.
Distributed Tracing: Use the same trace ID across different services to link related operations.
Error Handling: Implement proper error handling when working with custom trace IDs.